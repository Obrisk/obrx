# Generated by Django 3.2 on 2021-09-06 15:20

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    operations = [
        migrations.CreateModel(
            name='WechatUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='Wechat name')),
                ('org_picture', models.CharField(blank=True, max_length=150, null=True)),
                ('picture', models.CharField(blank=True, max_length=150, null=True)),
                ('thumbnail', models.CharField(blank=True, max_length=150, null=True)),
                ('gender', models.CharField(blank=True, choices=[('1', 'Male'), ('2', 'Female'), ('0', 'Unknown')], max_length=1, null=True)),
                ('wechat_id', models.CharField(blank=True, max_length=150, null=True)),
                ('wechat_openid', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='wechat_openid')),
                ('wechat_unionid', models.CharField(blank=True, max_length=100, null=True, verbose_name='wechat_unionid')),
                ('address', models.CharField(blank=True, max_length=300, null=True)),
                ('province_region', models.CharField(blank=True, max_length=200, null=True, verbose_name='Province')),
                ('city', models.CharField(max_length=200, verbose_name='City')),
                ('country', models.CharField(default='China', max_length=100, verbose_name='Country')),
                ('notes', models.CharField(blank=True, max_length=1000, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='Full name')),
                ('org_picture', models.CharField(blank=True, max_length=150, null=True)),
                ('picture', models.CharField(blank=True, max_length=150, null=True)),
                ('thumbnail', models.CharField(blank=True, max_length=150, null=True)),
                ('gender', models.CharField(blank=True, choices=[('1', 'Male'), ('2', 'Female'), ('0', 'Unknown')], max_length=1, null=True)),
                ('job_title', models.CharField(blank=True, max_length=50, null=True, verbose_name='Job title')),
                ('personal_url', models.URLField(blank=True, max_length=555, null=True, verbose_name='Personal URL')),
                ('facebook_account', models.CharField(blank=True, max_length=255, null=True, verbose_name='Facebook a/c profile name')),
                ('instagram_account', models.CharField(blank=True, max_length=255, null=True, verbose_name='Instagram a/c profile name')),
                ('linkedin_account', models.CharField(blank=True, max_length=255, null=True, verbose_name='LinkedIn a/c profile name')),
                ('snapchat_account', models.CharField(blank=True, max_length=255, null=True, verbose_name='Snapchat a/c profile name')),
                ('wechat_id', models.CharField(blank=True, max_length=150, null=True)),
                ('wechat_openid', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='wechat_openid')),
                ('wechat_unionid', models.CharField(blank=True, max_length=100, null=True, verbose_name='wechat_unionid')),
                ('english_address', models.CharField(blank=True, max_length=300, null=True)),
                ('chinese_address', models.CharField(blank=True, max_length=300, null=True)),
                ('province_region', models.CharField(max_length=200, verbose_name='Province')),
                ('city', models.CharField(max_length=200, verbose_name='City')),
                ('nationality', models.CharField(blank=True, max_length=200, null=True, verbose_name='Nationality')),
                ('short_bio', models.CharField(blank=True, max_length=60, null=True, verbose_name='Describe yourself')),
                ('bio', models.CharField(blank=True, max_length=280, null=True, verbose_name='Short bio')),
                ('country', models.CharField(default='China', max_length=100, verbose_name='Country')),
                ('points', models.IntegerField(default=0, verbose_name='Points')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, verbose_name='Phone number')),
                ('unverified_phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, verbose_name='Unverified_phone')),
                ('notes', models.CharField(blank=True, max_length=1000, null=True)),
                ('is_official', models.BooleanField(default=False)),
                ('is_seller', models.BooleanField(default=False)),
                ('classifieds_transactions_received', models.IntegerField(default=0)),
                ('no_of_classifieds_posted', models.IntegerField(default=0)),
                ('no_of_classifieds_negotiated', models.IntegerField(default=0)),
                ('status', models.IntegerField(default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
